<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8">
    <title>db test</title>
    <link type="text/css" href="css/smoothness/jquery-ui-1.7.2.custom.css" rel="Stylesheet" />	
    <script type="text/javascript" src="js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="libs/jquery.mousewheel.min.js"></script>
    <script type="text/javascript" src="js/jquery-ui-1.7.2.custom.min.js"></script>

    <script type="text/javascript" charset="utf-8">
    
    // Global variables.
    var gScanFlagNames = new Array(32);
    for(var i=0;i<32;i++) gScanFlagNames[i] = "Type"+ i;
    
    function RequestScannerInfo() {
      var run=580;
      var subrun=4;
      var gate=12;
      
      $.ajax({
        complete: ShowScannerInfo,
        data: { run:run, subrun:subrun, gate:gate},
        dataType: "xml",
        url:"scan_server/get_scan_info.cgi",
        async: true,
        type: 'GET'
      });
    }
    
    function ShowScannerInfo(data, textStatus) {
      
      // Error checking...
      // ..
      
      if(data.status) {
        console.log(data.status);
        if(data.status !== 200) {
          $("#status").css({'background-color':'red'});    
          $("#status").text("Scanner-DB Server gave error "+data.status+": \""+data.statusText+"\"");
          console.log("tried to get: "+data.url);
          return false;
        } else {
          $("#status").text("Scanner-DB Server returned data "+data.status+": \""+data.statusText+"\"");
        }
      }

      scanxml = data.responseXML; // put it into a global variable.
      if (scanxml.documentElement.nodeName === "parsererror")
      {
          errStr = scanxml.documentElement.childNodes[0].nodeValue;
          errStr = errStr.replace(/</g, "&lt;");
          console.log(errStr);
          return false;
      }

      if( $('error',scanxml).size() !== 0) {
        $('error',scanxml).each(function(i) {
          var txt = String($(this).text()).replace(/\n/g,"<br/>");
          console.log("Error on load: <br/> <pre>" + txt + "</pre>");
        });
        return false;
      }

      
      function DecomposeFlags(flags) {
        if(flags===0) return "(none)";
        var retval = "";
        for(var i=0;i<32;i++) {
          if( (flags>>>i)&1 === 1) {
            retval += gScanFlagNames[i] + "<br/>";
          }
        }
        return retval;
      }
      
      function DoEntry(entry, classes) {
        // Quick and dirty. This could be re-written to do each thing with careful formatting.
        var s = "<table border='0' class='"+ classes + "'>";
         $('*',entries[i]).each(function(i) {
           var title = this.nodeName;
           var text = $(this).text();
           if(title === "flags") {
             text = DecomposeFlags(parseInt(text));
           }
           s+="<tr>";
           s+="<th class='"+ classes + "'>" + title +"</th>";
           s+="<td class='"+ classes + "'>" + text + "</td>";
           s+="</tr>";
         })
         s += "</table>";
         return s;
        
      }
      
      // Ok, ready to process.
      var slice = 1; // FIXME - get from global.
      var entries = $('entry',scanxml);
      var s = "";
      // Find good slice matches first.
      for(var i=0; i<entries.length; i++){
        if(parseInt($('slice',entries[i]).text())===slice) {
          s+=DoEntry(entries[i],'scanner-info scanner-info-cur-slice');          
        }
      }
      // Find bad slice matches last.
      for(var i=0; i<entries.length; i++){
        if(parseInt($('slice',entries[i]).text())!==slice) {
          s+=DoEntry(entries[i],'scanner-info scanner-info-diff-slice');          
        }
      }

      $('#scan-info').html(s);
      
      
      
    }
    
    function ClearScannerInfo() {
      $('#scan-info').html("");
    }
     
    function SubmitScannerInfo(clickevent) {
      // Get global values of run, subrun, gate, slice.
      var run = 580;
      var subrun = 4;
      var gate = 12;
      var slice = 3;
      //FIXME
      // Get form values of name, clicked elements, and notes
      var user_name = $('#inScanUserName').val();
      var notes = $('#inScanNotes').val();
      var flags = 0;
      for(var i=0;i<32;i++) {
        console.log('#inScanCheckboxBit'+i+'  '+ $('#inScanCheckboxBit'+i).is(':checked'));
        if( $('#inScanCheckboxBit'+i).is(':checked')  ) {
          flags += (1<<i);
        }              
      }   
      
      $.ajax({
        complete: ShowScannerInfo,
        data: { run:run, subrun:subrun, gate:gate, slice:slice, user_name: user_name, flags:flags, notes:notes },
        dataType: "xml",
        url:"scan_server/set_scan_info.cgi",
        async: true,
        type: 'GET'
      });      
    }
     
    $(function() {
      // Get correct flag names into DOM.
      for(var i=0;i<32;i++) {
        $('#inScanCheckboxBit'+i+' + span').text(gScanFlagNames[i]);
      }   
      
      // Callback for scanner info submission.
      $('#goScanSubmit').click(SubmitScannerInfo);
      
    });
    
    
    
    
    
    $(function() {
       RequestScannerInfo();  // FIXME: call on returned event.
     });
   
    
    
  
    </script>
    
  </head>
  <body>
    <div id="page-container">

      <div id="scan-entry" class="scan-input">
        <span class="scan-input">User Name</span>
          <input type="text" class="ui-state-default" size="100" id="inScanUserName" value="Anonymous Coward" />
          <br />
        <span class="scan-input">Flags</span><br />
          <input type="checkbox" class="ui-state-default scan-input"  id="inScanCheckboxBit0" value="0" /><span>0</span><br />
          <input type="checkbox" class="ui-state-default scan-input"  id="inScanCheckboxBit1" value="0" /><span>1</span><br />
          <input type="checkbox" class="ui-state-default scan-input"  id="inScanCheckboxBit2" value="0" /><span>2</span><br />
          <input type="checkbox" class="ui-state-default scan-input"  id="inScanCheckboxBit3" value="0" /><span>3</span><br />
          <input type="checkbox" class="ui-state-default scan-input"  id="inScanCheckboxBit4" value="0" /><span>4</span><br />
          <input type="checkbox" class="ui-state-default scan-input"  id="inScanCheckboxBit5" value="0" /><span>5</span><br />
          <input type="checkbox" class="ui-state-default scan-input"  id="inScanCheckboxBit6" value="0" /><span>6</span><br />
          <input type="checkbox" class="ui-state-default scan-input"  id="inScanCheckboxBit7" value="0" /><span>7</span><br />
          <input type="checkbox" class="ui-state-default scan-input"  id="inScanCheckboxBit8" value="0" /><span>8</span><br />
          <br />
         <span class="scan-input">Notes</span><br />
         <textarea class="ui-state-default scan-input"  cols="30" rows="2" id="inScanNotes"></textarea><br /> 
         <input class="ui-state-default ui-corner-all" type="button" id="goScanSubmit" value="Submit" />
      </div>

      <div id="scan-info"></div>

    </div>
  </body>
</html>